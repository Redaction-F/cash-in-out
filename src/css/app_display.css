/* === For App.tsx === */
/* 全体 */
.container {
  /* 子要素を中央揃えに配置(display: flex) */
  align-items: flex-start;
  /* 枠線 */
  border: 2px solid;
  /* 枠線の色 */
  border-color: var(--color-text);
  /* heightにborder,paddingを含める */
  box-sizing: border-box;
  /* 子要素を横並びに配置(今回はalign-itemsとjustify-contentを適用するために使用) */
  display: flex;
  /* 子要素を縦に配置(display: flex) */
  flex-direction: column;
  /* 高さ */
  /* margin-top + height + margin-bottom = 100vh */
  height: 98vh;
  /* 子要素を上詰めに配置(display: flex) */
  justify-content: flex-start;
  /* 外余白 */
  margin: 1vh 1vw 1vh 1vw;
  /* 内余白 */
  padding: 2vh 2vw 2vh 2vw;
  /* 幅 */
  /* margin-left + width + margin-right = 100vw */
  width: 98vw;
}
/* ====== */


/* === For AppDisplay.tsx === */
/* 各画面のラッパー */
.displays {
  /* 高さ */
  /* container.padding-top + height + tab_wrapper.height + container.padding-buttom = container.height */
  height: 80vh;
  /* 幅 */
  /* container.padding-left + width + tab_wrapper.width + container.padding-right = container.width */
  width: 94vw;
}

/* 各画面 */
.display {
  /* 最初はすべて表示しない */
  display: none;
}

/* 各画面 */
.display-show {
  /* 表示する画面にのみ付与 */
  display: block;
}
/* ====== */


/* === For TabsWrapper.tsx === */
/* タブ全体 */
.tabbar-wapper {
  /* 枠(上) */
  border-top: 2px solid;
  /* 枠(上)の色 */
  border-top-color: var(--color-text);
  /* heightにborder,paddingを含める */
  box-sizing: border-box;
  /* 子要素を横並びに配置 */
  display: flex;
  /* 高さ */
  height: 14vh;
  /* 両端揃え(端の余白は半分) */
  justify-content: space-around;
  /* 幅 */
  width: 94vw;
}

/* タブ */
.tabbar-tab {
  /* 高さ */
  height: 13.2vh;
  /* 外余白 */
  margin: 0.8vh 0 0 0;
  /* tab::after,tab::beforeのための設定 */
  position: relative;
  /* 幅 */
  width: 18vw;
}

/* タブ右下の装飾 */
.tabbar-tab::after {
  /* 枠(下) */
  border-bottom: 1px solid;
  /* 枠(下)の色 */
  border-bottom-color: var(--color-text);
  /* 枠(右) */
  border-right: 1px solid;
  /* 枠(右)の色 */
  border-right-color: var(--color-text);
  /* 親要素からの相対位置(下) */
  bottom: -1px;
  /* heightにborder,paddingを含める */
  box-sizing: border-box;
  /* 疑似要素の内容 */
  content: "";
  /* 高さ */
  height: 5vh;
  /* 位置取り等の設定 */
  position: absolute;
  /* 親要素からの相対位置(右) */
  right: -1px;
  /* 幅 */
  width: 6vw;
  /* 背面に移動 */
  z-index: -1;
}

/* タブボタン */
.tabbar-tab-button {
  /* 表示しない(機能のみ使用) */
  display: none;
}

/* タブ選択時のタブラベル */
.tabbar-tab-button:checked + .tabbar-tab-label {
  /* 背景色 */
  background-color: var(--color-background);
}

/* タブ選択時のタブ */
.tabbar-tab:has(.tabbar-tab-button:checked) {
  /* 外余白(上) */
  margin-top: 0;
}

/* タブ選択時のタブ上の装飾 */
.tabbar-tab.tabbar-tab:has(.tabbar-tab-button:checked)::before {
  /* 背景色 */
  background-color: var(--color-background);
  /* 枠(左) */
  border-left: 2px solid;
  /* 枠(左)の色 */
  border-left-color: var(--color-text);
  /* 枠(右) */
  border-right: 2px solid;
  /* 枠(右)の色 */
  border-right-color: var(--color-text);
  /* heightにborder,paddingを含める */
  box-sizing: border-box;
  /* 疑似要素の内容 */
  content: "";
  /* 高さ */
  height: 2.5vh;
  /* 位置取り等の設定 */
  position: absolute;
  /* タブラッパーの枠線を消す */
  top: -2px;
  /* 幅 */
  width: 100%;
  /* 前面に移動 */
  z-index: 1;
}

/* タブラベル */
.tabbar-tab-label {
  /* 中央揃え */
  align-items: center;
  /* 背景色 */
  background-color: var(--color-content-2);
  /* 子要素を横並びに配置 */
  display: flex;
  /* フォントサイズ */
  font-size: 18px;
  /* 高さ */
  height: 100%;
  /* 中央揃え(上下) */
  justify-content: center;
  /* 選択不可 */
  user-select: none;
  /* 幅 */
  width: 100%;
}

/* タブラベルホバー時 */
.tabbar-tab-label:hover {
  /* 背景色 */
  background-color: var(--color-content-3);
}

/* ======= */